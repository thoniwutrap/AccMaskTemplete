apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    buildToolsVersion config.build_tools
    compileSdkVersion config.target_sdk
    defaultConfig {
        applicationId "com.teerap.codelab.aacmasktemplete"
        minSdkVersion config.min_sdk
        targetSdkVersion config.target_sdk
        versionCode config.version_code
        versionName config.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            if (project.hasProperty('RELEASE_STORE_FILE')) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            splits.abi.enable = false
            splits.density.enable = false
            aaptOptions.cruncherEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'KeAppBaseURL', POC_KeAppBaseURL
            buildConfigField 'String', 'KeAppID', POC_KeAppID
            buildConfigField 'String', 'KeAppKey', POC_KeAppKey
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'KeAppBaseURL', POC_KeAppBaseURL
            buildConfigField 'String', 'KeAppID', POC_KeAppID
            buildConfigField 'String', 'KeAppKey', POC_KeAppKey
        }
    }
    androidExtensions {
        experimental = true
    }
    lintOptions {
        checkReleaseBuilds false
    }
    dataBinding {
        enabled = true
    }
    kapt {
        generateStubs = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.kotlin_stdlib_jdk


    //Support
    implementation deps.support.app_compat
    implementation deps.support.constraintLayout


    //Network
    implementation deps.okhttp3.okhttp
    implementation deps.okhttp3.logging_interceptor
    implementation deps.retrofit2.retrofit
    implementation deps.retrofit2.converter_gson
    implementation deps.retrofit2.rx_java2_adapter


    //Room
    implementation deps.room.runtime
    kapt deps.room.compiler


    //ViewModel and LiveData
    implementation deps.lifecycle.extensions
    kapt deps.lifecycle.compiler


    //Dependency Injection
    implementation deps.dagger2.plugin
    kapt deps.dagger2.compiler
//    implementation deps.dagger2.android
//    implementation deps.dagger2.android_support
    // kapt deps.dagger2.android_processor
//

    //test
    testImplementation deps.support.test.junit
    androidTestImplementation deps.support.test.runner
    androidTestImplementation deps.support.test.espresso
}
